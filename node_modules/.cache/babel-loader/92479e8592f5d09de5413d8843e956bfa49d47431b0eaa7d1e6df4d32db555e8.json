{"ast":null,"code":"import _regeneratorRuntime from\"/Users/oqpo/Documents/GitHub/darkblock-flow/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/oqpo/Documents/GitHub/darkblock-flow/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _taggedTemplateLiteral from\"/Users/oqpo/Documents/GitHub/darkblock-flow/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import styled from\"styled-components\";import*as fcl from\"@onflow/fcl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\nbackground: linear-gradient(0deg, #ffffff 0%, #e5e5e5 100%);\\ndisplay: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  align-items: center;\\n  padding-top: 110px;\\n  padding-bottom: 50px;\\n \\n\\n  main{\\n    display: flex;\\n  }\\n\\n  div{\\n    width: 300px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 5px;\\n  }\\n\\n  button{\\n    width: 100px;\\n    padding: 10px;\\n    border: none;\\n    background-color: #000000;\\n    color: white;\\n    border-radius: 8px;\\n    font-weight: 500;\\n    &:hover {\\n      color: black;\\n      background-color: white;\\n      cursor: pointer;\\n    }\\n  }\\n\\n  img{\\n    width: 200px;\\n  }\\n\"])));function MintComponent(){function mintNFT(_x,_x2){return _mintNFT.apply(this,arguments);}function _mintNFT(){_mintNFT=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(type,url){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fcl.mutate({cadence:\"\\n            import FlowTutorialMint from 0x0822a39d2b1cb404\\n            import NonFungibleToken from 0x631e88ae7f1d7c20\\n            import MetadataViews from 0x631e88ae7f1d7c20\\n\\n            transaction(type: String, url: String){\\n                let recipientCollection: &FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}\\n\\n                prepare(signer: AuthAccount){\\n                    \\n                if signer.borrow<&FlowTutorialMint.Collection>(from: FlowTutorialMint.CollectionStoragePath) == nil {\\n                signer.save(<- FlowTutorialMint.createEmptyCollection(), to: FlowTutorialMint.CollectionStoragePath)\\n                signer.link<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection}>(FlowTutorialMint.CollectionPublicPath, target: FlowTutorialMint.CollectionStoragePath)\\n                }\\n\\n                self.recipientCollection = signer.getCapability(FlowTutorialMint.CollectionPublicPath)\\n                                            .borrow<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}>()!\\n                }\\n                execute{\\n                    FlowTutorialMint.mintNFT(recipient: self.recipientCollection, type: type, url: url)\\n                }\\n            }\\n            \",args:function args(arg,t){return[arg(type,t.String),arg(url,t.String)];},limit:9999});case 3:res=_context.sent;fcl.tx(res).subscribe(function(res){if(res.status===4&&res.errorMessage===\"\"){window.alert(\"NFT Minted!\");window.location.reload(false);}});console.log(\"txid\",res);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(\"err\",_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return _mintNFT.apply(this,arguments);}return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Mint this NFT to access \",/*#__PURE__*/_jsx(\"br\",{}),\" its token-bound content\"]}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"video\",{style:{borderRadius:\"16px\"},src:\"https://github.com/raggi-eth/frames/raw/main/Logo_Rotation.mp4\",width:\"320\",height:\"320\",loop:true,autoPlay:true,muted:true}),/*#__PURE__*/_jsx(\"h3\",{children:\"Darkblock Demo NFT\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return mintNFT(\"Darkblock Demo NFT\",\"https://github.com/raggi-eth/frames/blob/main/Logo_Rotation.gif?raw=true\");},children:\"Free Mint\"})]})})]});}export default MintComponent;","map":{"version":3,"names":["styled","fcl","jsx","_jsx","jsxs","_jsxs","Wrapper","div","_templateObject","_taggedTemplateLiteral","MintComponent","mintNFT","_x","_x2","_mintNFT","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","url","res","wrap","_callee$","_context","prev","next","mutate","cadence","args","arg","t","String","limit","sent","tx","subscribe","status","errorMessage","window","alert","location","reload","console","log","t0","stop","children","style","borderRadius","src","width","height","loop","autoPlay","muted","onClick"],"sources":["/Users/oqpo/Documents/GitHub/darkblock-flow/src/components/MintComponent.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport * as fcl from \"@onflow/fcl\";\n\nconst Wrapper = styled.div`\nbackground: linear-gradient(0deg, #ffffff 0%, #e5e5e5 100%);\ndisplay: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  padding-top: 110px;\n  padding-bottom: 50px;\n \n\n  main{\n    display: flex;\n  }\n\n  div{\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n  }\n\n  button{\n    width: 100px;\n    padding: 10px;\n    border: none;\n    background-color: #000000;\n    color: white;\n    border-radius: 8px;\n    font-weight: 500;\n    &:hover {\n      color: black;\n      background-color: white;\n      cursor: pointer;\n    }\n  }\n\n  img{\n    width: 200px;\n  }\n`;\n\nfunction MintComponent() {\n  async function mintNFT(type, url) {\n    try {\n      const res = await fcl.mutate({\n        cadence: `\n            import FlowTutorialMint from 0x0822a39d2b1cb404\n            import NonFungibleToken from 0x631e88ae7f1d7c20\n            import MetadataViews from 0x631e88ae7f1d7c20\n\n            transaction(type: String, url: String){\n                let recipientCollection: &FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}\n\n                prepare(signer: AuthAccount){\n                    \n                if signer.borrow<&FlowTutorialMint.Collection>(from: FlowTutorialMint.CollectionStoragePath) == nil {\n                signer.save(<- FlowTutorialMint.createEmptyCollection(), to: FlowTutorialMint.CollectionStoragePath)\n                signer.link<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection}>(FlowTutorialMint.CollectionPublicPath, target: FlowTutorialMint.CollectionStoragePath)\n                }\n\n                self.recipientCollection = signer.getCapability(FlowTutorialMint.CollectionPublicPath)\n                                            .borrow<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}>()!\n                }\n                execute{\n                    FlowTutorialMint.mintNFT(recipient: self.recipientCollection, type: type, url: url)\n                }\n            }\n            `,\n        args: (arg, t) => [arg(type, t.String), arg(url, t.String)],\n        limit: 9999,\n      });\n      fcl.tx(res).subscribe((res) => {\n        if (res.status === 4 && res.errorMessage === \"\") {\n            window.alert(\"NFT Minted!\")\n            window.location.reload(false);\n        }\n      });\n\n      console.log(\"txid\", res);\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  return (\n  <Wrapper>\n    <h1>Mint this NFT to access <br></br> its token-bound content</h1>\n    <main>\n      \n        <div>\n          {/* add a video here */}\n          <video style={{borderRadius: \"16px\"}} src=\"https://github.com/raggi-eth/frames/raw/main/Logo_Rotation.mp4\" width=\"320\" height=\"320\" loop autoPlay muted></video>\n            {/* <img src=\"https://images.unsplash.com/photo-1517849845537-4d257902454a\" alt=\"Mad Dog\"/> */}\n            <h3>Darkblock Demo NFT</h3>\n            <button onClick={() => mintNFT(\"Darkblock Demo NFT\", \"https://github.com/raggi-eth/frames/blob/main/Logo_Rotation.gif?raw=true\")}>Free Mint</button>\n        </div>\n    </main>\n  </Wrapper>\n  )\n}\n\nexport default MintComponent;"],"mappings":"ubAAA,MAAO,CAAAA,MAAM,KAAM,mBAAmB,CACtC,MAAO,GAAK,CAAAC,GAAG,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,GAAM,CAAAC,OAAO,CAAGN,MAAM,CAACO,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,8rBAyCzB,CAED,QAAS,CAAAC,aAAaA,CAAA,CAAG,SACR,CAAAC,OAAOA,CAAAC,EAAA,CAAAC,GAAA,SAAAC,QAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,SAAA,EAAAA,QAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAtB,SAAAC,QAAuBC,IAAI,CAAEC,GAAG,MAAAC,GAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEV,CAAA3B,GAAG,CAAC4B,MAAM,CAAC,CAC3BC,OAAO,+xCAsBF,CACLC,IAAI,CAAE,SAAAA,KAACC,GAAG,CAAEC,CAAC,QAAK,CAACD,GAAG,CAACX,IAAI,CAAEY,CAAC,CAACC,MAAM,CAAC,CAAEF,GAAG,CAACV,GAAG,CAAEW,CAAC,CAACC,MAAM,CAAC,CAAC,GAC3DC,KAAK,CAAE,IACT,CAAC,CAAC,QA1BIZ,GAAG,CAAAG,QAAA,CAAAU,IAAA,CA2BTnC,GAAG,CAACoC,EAAE,CAACd,GAAG,CAAC,CAACe,SAAS,CAAC,SAACf,GAAG,CAAK,CAC7B,GAAIA,GAAG,CAACgB,MAAM,GAAK,CAAC,EAAIhB,GAAG,CAACiB,YAAY,GAAK,EAAE,CAAE,CAC7CC,MAAM,CAACC,KAAK,CAAC,aAAa,CAAC,CAC3BD,MAAM,CAACE,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC,CACjC,CACF,CAAC,CAAC,CAEFC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEvB,GAAG,CAAC,CAACG,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAqB,EAAA,CAAArB,QAAA,aAEzBmB,OAAO,CAACC,GAAG,CAAC,KAAK,CAAApB,QAAA,CAAAqB,EAAO,CAAC,CAAC,yBAAArB,QAAA,CAAAsB,IAAA,MAAA5B,OAAA,gBAE7B,UAAAN,QAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,mBACAX,KAAA,CAACC,OAAO,EAAA2C,QAAA,eACN5C,KAAA,OAAA4C,QAAA,EAAI,0BAAwB,cAAA9C,IAAA,QAAQ,CAAC,2BAAwB,EAAI,CAAC,cAClEA,IAAA,SAAA8C,QAAA,cAEI5C,KAAA,QAAA4C,QAAA,eAEE9C,IAAA,UAAO+C,KAAK,CAAE,CAACC,YAAY,CAAE,MAAM,CAAE,CAACC,GAAG,CAAC,gEAAgE,CAACC,KAAK,CAAC,KAAK,CAACC,MAAM,CAAC,KAAK,CAACC,IAAI,MAACC,QAAQ,MAACC,KAAK,MAAQ,CAAC,cAE9JtD,IAAA,OAAA8C,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3B9C,IAAA,WAAQuD,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAA/C,OAAO,CAAC,oBAAoB,CAAE,0EAA0E,CAAC,EAAC,CAAAsC,QAAA,CAAC,WAAS,CAAQ,CAAC,EACnJ,CAAC,CACJ,CAAC,EACA,CAAC,CAEZ,CAEA,cAAe,CAAAvC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}