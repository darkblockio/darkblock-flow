{"ast":null,"code":"/**\n * Asserts fact is true, otherwise throw an error with invariant message\n * @param {boolean} fact\n * @param {string} msg\n * @param {Array} rest\n * @returns {void}\n */\nfunction invariant(fact, msg) {\n  if (!fact) {\n    var _console;\n    var error = new Error(\"INVARIANT \".concat(msg));\n    error.stack = error.stack.split(\"\\n\").filter(function (d) {\n      return !/at invariant/.test(d);\n    }).join(\"\\n\");\n    for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      rest[_key - 2] = arguments[_key];\n    }\n    (_console = console).error.apply(_console, [\"\\n\\n---\\n\\n\", error, \"\\n\\n\"].concat(rest, [\"\\n\\n---\\n\\n\"]));\n    throw error;\n  }\n}\nexport { invariant };","map":{"version":3,"names":["invariant","fact","msg","_console","error","Error","concat","stack","split","filter","d","test","join","_len","arguments","length","rest","Array","_key","console","apply"],"sources":["/Users/oqpo/Documents/GitHub/darkblock-flow/node_modules/@onflow/util-invariant/src/index.js"],"sourcesContent":["/**\n * Asserts fact is true, otherwise throw an error with invariant message\n * @param {boolean} fact\n * @param {string} msg\n * @param {Array} rest\n * @returns {void}\n */\nexport function invariant(fact, msg, ...rest) {\n  if (!fact) {\n    const error = new Error(`INVARIANT ${msg}`)\n    error.stack = error.stack\n      .split(\"\\n\")\n      .filter(d => !/at invariant/.test(d))\n      .join(\"\\n\")\n    console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\")\n    throw error\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,SAASA,CAACC,IAAI,EAAEC,GAAG,EAAW;EAC5C,IAAI,CAACD,IAAI,EAAE;IAAA,IAAAE,QAAA;IACT,IAAMC,KAAK,GAAG,IAAIC,KAAK,cAAAC,MAAA,CAAcJ,GAAI,CAAC,CAAC;IAC3CE,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACG,KAAK,CACtBC,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAAC,UAAAC,CAAC;MAAA,OAAI,CAAC,cAAc,CAACC,IAAI,CAACD,CAAC,CAAC;IAAA,EAAC,CACpCE,IAAI,CAAC,IAAI,CAAC;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EANuBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAOxC,CAAAf,QAAA,GAAAgB,OAAO,EAACf,KAAK,CAAAgB,KAAA,CAAAjB,QAAA,GAAC,aAAa,EAAEC,KAAK,EAAE,MAAM,EAAAE,MAAA,CAAKU,IAAI,GAAE,aAAa,GAAC;IACnE,MAAMZ,KAAK;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}