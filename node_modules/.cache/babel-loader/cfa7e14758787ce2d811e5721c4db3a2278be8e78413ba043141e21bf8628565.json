{"ast":null,"code":"var _jsxFileName = \"/Users/oqpo/Documents/GitHub/darkblock-flow/src/components/MintComponent.jsx\";\nimport styled from \"styled-components\";\nimport * as fcl from \"@onflow/fcl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\nbackground: linear-gradient(0deg, #ffffff 0%, #e5e5e5 100%);\ndisplay: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  padding-top: 110px;\n  padding-bottom: 50px;\n \n\n  main{\n    display: flex;\n  }\n\n  div{\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n  }\n\n  button{\n    width: 100px;\n    padding: 10px;\n    border: none;\n    background-color: #000000;\n    color: white;\n    border-radius: 8px;\n    font-weight: 500;\n    &:hover {\n      color: black;\n      background-color: white;\n      cursor: pointer;\n    }\n  }\n\n  img{\n    width: 200px;\n  }\n`;\n_c = Wrapper;\nfunction MintComponent() {\n  async function mintNFT(type, url) {\n    try {\n      const res = await fcl.mutate({\n        cadence: `\n            import FlowTutorialMint from 0x0822a39d2b1cb404\n            import NonFungibleToken from 0x631e88ae7f1d7c20\n            import MetadataViews from 0x631e88ae7f1d7c20\n\n            transaction(type: String, url: String){\n                let recipientCollection: &FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}\n\n                prepare(signer: AuthAccount){\n                    \n                if signer.borrow<&FlowTutorialMint.Collection>(from: FlowTutorialMint.CollectionStoragePath) == nil {\n                signer.save(<- FlowTutorialMint.createEmptyCollection(), to: FlowTutorialMint.CollectionStoragePath)\n                signer.link<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection}>(FlowTutorialMint.CollectionPublicPath, target: FlowTutorialMint.CollectionStoragePath)\n                }\n\n                self.recipientCollection = signer.getCapability(FlowTutorialMint.CollectionPublicPath)\n                                            .borrow<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}>()!\n                }\n                execute{\n                    FlowTutorialMint.mintNFT(recipient: self.recipientCollection, type: type, url: url)\n                }\n            }\n            `,\n        args: (arg, t) => [arg(type, t.String), arg(url, t.String)],\n        limit: 9999\n      });\n      fcl.tx(res).subscribe(res => {\n        if (res.status === 4 && res.errorMessage === \"\") {\n          window.alert(\"NFT Minted!\");\n          window.location.reload(false);\n        }\n      });\n      console.log(\"txid\", res);\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Mint this NFT to access \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }, this), \" it\\u2019s token-bound content\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          style: {\n            borderRadius: \"16px\"\n          },\n          src: \"https://github.com/raggi-eth/frames/raw/main/Logo_Rotation.mp4\",\n          width: \"320\",\n          height: \"320\",\n          loop: true,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Darkblock Demo NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => mintNFT(\"Darkblock Demo NFT\", \"https://github.com/raggi-eth/frames/blob/main/Logo_Rotation.gif?raw=true\"),\n          children: \"Free Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n_c2 = MintComponent;\nexport default MintComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"MintComponent\");","map":{"version":3,"names":["styled","fcl","jsxDEV","_jsxDEV","Wrapper","div","_c","MintComponent","mintNFT","type","url","res","mutate","cadence","args","arg","t","String","limit","tx","subscribe","status","errorMessage","window","alert","location","reload","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","borderRadius","src","width","height","loop","autoPlay","muted","onClick","_c2","$RefreshReg$"],"sources":["/Users/oqpo/Documents/GitHub/darkblock-flow/src/components/MintComponent.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport * as fcl from \"@onflow/fcl\";\n\nconst Wrapper = styled.div`\nbackground: linear-gradient(0deg, #ffffff 0%, #e5e5e5 100%);\ndisplay: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  padding-top: 110px;\n  padding-bottom: 50px;\n \n\n  main{\n    display: flex;\n  }\n\n  div{\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n  }\n\n  button{\n    width: 100px;\n    padding: 10px;\n    border: none;\n    background-color: #000000;\n    color: white;\n    border-radius: 8px;\n    font-weight: 500;\n    &:hover {\n      color: black;\n      background-color: white;\n      cursor: pointer;\n    }\n  }\n\n  img{\n    width: 200px;\n  }\n`;\n\nfunction MintComponent() {\n  async function mintNFT(type, url) {\n    try {\n      const res = await fcl.mutate({\n        cadence: `\n            import FlowTutorialMint from 0x0822a39d2b1cb404\n            import NonFungibleToken from 0x631e88ae7f1d7c20\n            import MetadataViews from 0x631e88ae7f1d7c20\n\n            transaction(type: String, url: String){\n                let recipientCollection: &FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}\n\n                prepare(signer: AuthAccount){\n                    \n                if signer.borrow<&FlowTutorialMint.Collection>(from: FlowTutorialMint.CollectionStoragePath) == nil {\n                signer.save(<- FlowTutorialMint.createEmptyCollection(), to: FlowTutorialMint.CollectionStoragePath)\n                signer.link<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection}>(FlowTutorialMint.CollectionPublicPath, target: FlowTutorialMint.CollectionStoragePath)\n                }\n\n                self.recipientCollection = signer.getCapability(FlowTutorialMint.CollectionPublicPath)\n                                            .borrow<&FlowTutorialMint.Collection{NonFungibleToken.CollectionPublic}>()!\n                }\n                execute{\n                    FlowTutorialMint.mintNFT(recipient: self.recipientCollection, type: type, url: url)\n                }\n            }\n            `,\n        args: (arg, t) => [arg(type, t.String), arg(url, t.String)],\n        limit: 9999,\n      });\n      fcl.tx(res).subscribe((res) => {\n        if (res.status === 4 && res.errorMessage === \"\") {\n            window.alert(\"NFT Minted!\")\n            window.location.reload(false);\n        }\n      });\n\n      console.log(\"txid\", res);\n    } catch (error) {\n      console.log(\"err\", error);\n    }\n  }\n\n  return (\n  <Wrapper>\n    <h1>Mint this NFT to access <br></br> itâ€™s token-bound content</h1>\n    <main>\n      \n        <div>\n          {/* add a video here */}\n          <video style={{borderRadius: \"16px\"}} src=\"https://github.com/raggi-eth/frames/raw/main/Logo_Rotation.mp4\" width=\"320\" height=\"320\" loop autoPlay muted></video>\n            {/* <img src=\"https://images.unsplash.com/photo-1517849845537-4d257902454a\" alt=\"Mad Dog\"/> */}\n            <h3>Darkblock Demo NFT</h3>\n            <button onClick={() => mintNFT(\"Darkblock Demo NFT\", \"https://github.com/raggi-eth/frames/blob/main/Logo_Rotation.gif?raw=true\")}>Free Mint</button>\n        </div>\n    </main>\n  </Wrapper>\n  )\n}\n\nexport default MintComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}